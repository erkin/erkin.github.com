// -*- mode: conf; comment-start: "//"; indent-tabs-mode: nil -*-
default  partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

// naming drafts
//    name[Group1]= "English (erkin's Programmer's Dvorak alternative international adjusted for emacs keybindings and using standard symbol keys with Turkish and Greek letters and no dead keys)";
//    name[Group1]= "English (e prog Dvrk alt intl 4 emacs w/ std sym keys w/ tr-gr & !dead keys)";
//    name[Group1]= "English (intl prog Dvorak alt w/ Turkish+Greek)";
//    name[Group1]= "English (Alternative Programmer's Dvorak)";
//    name[Group1]= "English (Programmer's Alternative Dvorak)";
//    name[Group1]= "English (Dvorak alternative international with no dead keys);
//    name[Group1]= "English (erkin's Dvorak Alternative)";
//    name[Group1]= "English (erkin's layout)";
    name[Group1]= "English (erkin)";

// v0.6
//
// v0.1: Initial version, Programmer's Dvorak with no dead keys
// v0.2: Add symbols and Turkish letters
// v0.3: Add Greek letters
// v0.4: Rearrange symbol row in ISO/ANSI/QWERTY style à la generic Dvorak
// v0.5: Also rearrange the number row the same way — this is hard
// v0.6: Put symbols back to level 1; rip Programmer's Dvorak †

    key <TLDE> { [ grave,           asciitilde                                  ] };
    key <AE01> { [ 1,               exclam,         U203D,           U2E18      ] }; // interrobang
    key <AE02> { [ 2,               at                                          ] };
    key <AE03> { [ 3,               numbersign                                  ] };
    key <AE04> { [ 4,               dollar,         currency                    ] };
    key <AE05> { [ 5,               percent                                     ] };
    key <AE06> { [ 6,               asciicircum                                 ] };

    key <AE07> { [ 7,               ampersand,      U204A                       ] }; // Tironian et
    key <AE08> { [ 8,               asterisk                                    ] };
    key <AE09> { [ 9,               parenleft                                   ] };
    key <AE10> { [ 0,               parenright,     U25CA                       ] }; // lozenge
    key <AE11> { [ bracketleft,     braceleft,      guillemotleft,   leftdoublequotemark ] };
    key <AE12> { [ bracketright,    braceright,     guillemotright,  rightdoublequotemark ] };
    key <BKSP> { [ BackSpace,       BackSpace,      BackSpace,       BackSpace  ] };


    key <AD01> { [ apostrophe,      quotedbl,       paragraph,       section    ] };
    key <AD02> { [ comma,           less,           guillemotleft,   U201C      ] }; // lquote
    key <AD03> { [ period,          greater,        guillemotright,  U201D      ] }; // rquote
    key <AD04> { [ p,               P,              Greek_pi,        Greek_PI   ] };
    key <AD05> { [ y,               Y,              Greek_iota,      Greek_IOTA ] };
    key <AD06> { [ f,               F,              Greek_phi,       Greek_PHI  ] };

    key <AD07> { [ g,               G,              gbreve,          Gbreve     ] };
    key <AD08> { [ c,               C,              ccedilla,        Ccedilla   ] };
    key <AD09> { [ r,               R,              Greek_rho,       Greek_RHO  ] };
    key <AD10> { [ l,               L,              Greek_lambda,    Greek_LAMBDA ] };
    key <AD11> { [ slash,           question,       U2E2E                       ] }; // irony mark
    key <AD12> { [ equal,           plus,           Greek_psi,       Greek_PSI  ] };


    key <AC01> { [ a,               A,              adiaeresis,      Adiaeresis ] };
    key <AC02> { [ o,               O,              odiaeresis,      Odiaeresis ] };
    key <AC03> { [ e,               E,              eacute,          Eacute     ] };
    key <AC04> { [ u,               U,              udiaeresis,      Udiaeresis ] };
    key <AC05> { [ i,               I,              idotless,        Iabovedot  ] };
    key <AC06> { [ d,               D,              Greek_delta,     Greek_DELTA ] };

    key <AC07> { [ h,               H,              Greek_gamma,     Greek_GAMMA ] };
    key <AC08> { [ t,               T,              U20BA                       ] }; // Turkish lira
    key <AC09> { [ n,               N,              Greek_sigma,     Greek_SIGMA ] };
    key <AC10> { [ s,               S,              scedilla,        Scedilla   ] };
    key <AC11> { [ minus,           underscore,     hyphen,          endash     ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
    key <BKSL> { [ backslash,       bar,            brokenbar,       U2135      ] }; // aleph symbol


    key <AB01> { [ semicolon,       colon,          Greek_alpha,     Greek_ALPHA ] };
    key <AB02> { [ q,               Q,              Greek_omega,     Greek_OMEGA ] };
    key <AB03> { [ j,               J,              Greek_epsilon,   Greek_EPSILON ] };
    key <AB04> { [ k,               K,              Greek_kappa,     Greek_KAPPA ] };
    key <AB05> { [ x,               X,              periodcentered              ] };
    key <AB06> { [ b,               B,              Greek_beta,      Greek_BETA ] };

    key <AB07> { [ m,               M,              Greek_mu,        Greek_MU   ] };
    key <AB08> { [ w,               W,              Greek_theta,     Greek_THETA ] };
    key <AB09> { [ v,               V,              Greek_tau,       Greek_TAU  ] };
    key <AB10> { [ z,               Z,              zcaron,          Zcaron     ] };

    include "level3(ralt_switch)"
};
